/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package restaurants_manager;

import DataBaseConn.sqldatabaseconn;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SafiZidan
 */
public class One_day_gard_JFrame extends javax.swing.JFrame {

    /**
     * Creates new form One_day_cashe_jFrame
     */
    public One_day_gard_JFrame() {
       this.setAlwaysOnTop(true);
         this.setUndecorated(true);
         this.setVisible(true);
         this.setResizable(false);
         initComponents();
         
//         Toolkit t = Toolkit.getDefaultToolkit();
//         int wid = (int) t.getScreenSize().getWidth();
//         int hid = (int) t.getScreenSize().getHeight();
//          this.setSize(wid , hid);
//        // this.setSize(1000 , 620);
//         // this.pack();
//         this.setLocationRelativeTo(null);
         // this.setLocation(wid/2-this.getSize().width/2, hid/2-this.getSize().height/2);
         
          Frame_Size frame_Size = new Frame_Size();
         this.setSize(frame_Size.width(),frame_Size.height());
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Deliviry_jTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Takeaway_jTable = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jTextField_gard_product_count_takeaway = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField_gard_total_price_takeaway = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTextField_gard_product_count_deliviry = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField_gard_total_price_deliviry = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextField_gard_product_count = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField_gard_total_price = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jComboBox_section_edit = new javax.swing.JComboBox<>();
        jComboBox_products = new javax.swing.JComboBox<>();
        jTextField_search = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextField_gard_product_name = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1440, 1440));
        setPreferredSize(new java.awt.Dimension(1600, 900));
        setSize(new java.awt.Dimension(0, 0));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(15, 15, 15));
        jPanel3.setForeground(new java.awt.Color(15, 15, 15));
        jPanel3.setMaximumSize(new java.awt.Dimension(1440, 1440));
        jPanel3.setPreferredSize(new java.awt.Dimension(1680, 1050));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Safi_restaurants_manager/pics/gard_big_icon.png"))); // NOI18N
        jLabel7.setText("جرد يومية منتجات");

        jButton3.setBackground(new java.awt.Color(102, 102, 102));
        jButton3.setText("_");
        jButton3.setToolTipText("");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(102, 0, 0));
        jButton1.setText("X");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(15, 15, 15));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(102, 0, 0), null));
        jPanel4.setPreferredSize(new java.awt.Dimension(1680, 1050));

        jPanel1.setBackground(new java.awt.Color(51, 0, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(102, 0, 0), null));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("طلبات الديلفري لهذا اليوم حتي الأن :");

        Deliviry_jTable.setBackground(new java.awt.Color(51, 0, 0));
        Deliviry_jTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Deliviry_jTable.setForeground(new java.awt.Color(255, 255, 255));
        Deliviry_jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "الوقت و التاريخ", "رقم الأوردر", "اجمالى السعر", "عدد", "اسم المنتج"
            }
        ));
        Deliviry_jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Deliviry_jTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Deliviry_jTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(51, 0, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(102, 0, 0), null));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("طلبات التيك أواي لهذا اليوم حتي الأن :");

        Takeaway_jTable.setBackground(new java.awt.Color(51, 0, 0));
        Takeaway_jTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Takeaway_jTable.setForeground(new java.awt.Color(255, 255, 255));
        Takeaway_jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "الوقت و التاريخ", "رقم الأوردر", "اجمالى السعر", "عدد", "اسم المنتج"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Takeaway_jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Takeaway_jTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Takeaway_jTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton4.setBackground(new java.awt.Color(0, 153, 0));
        jButton4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("جرد منتجات سابق");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jPanel6.setBackground(new java.awt.Color(51, 0, 0));
        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(102, 0, 0), null));

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("الكمية المباعة تاك اواى");

        jTextField_gard_product_count_takeaway.setBackground(new java.awt.Color(255, 255, 255));
        jTextField_gard_product_count_takeaway.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jTextField_gard_product_count_takeaway.setForeground(new java.awt.Color(0, 0, 0));
        jTextField_gard_product_count_takeaway.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField_gard_product_count_takeaway.setText("0");
        jTextField_gard_product_count_takeaway.setToolTipText("");
        jTextField_gard_product_count_takeaway.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_gard_product_count_takeawayActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("المبلغ المحصل تاك اواى");

        jTextField_gard_total_price_takeaway.setBackground(new java.awt.Color(255, 255, 255));
        jTextField_gard_total_price_takeaway.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jTextField_gard_total_price_takeaway.setForeground(new java.awt.Color(0, 0, 0));
        jTextField_gard_total_price_takeaway.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField_gard_total_price_takeaway.setText("0");
        jTextField_gard_total_price_takeaway.setToolTipText("");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField_gard_product_count_takeaway, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField_gard_total_price_takeaway, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addGap(4, 4, 4)
                .addComponent(jTextField_gard_product_count_takeaway, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_gard_total_price_takeaway, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(51, 0, 0));
        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(102, 0, 0), null));

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("الكمية المباعة دلفرى");

        jTextField_gard_product_count_deliviry.setBackground(new java.awt.Color(255, 255, 255));
        jTextField_gard_product_count_deliviry.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jTextField_gard_product_count_deliviry.setForeground(new java.awt.Color(0, 0, 0));
        jTextField_gard_product_count_deliviry.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField_gard_product_count_deliviry.setText("0");
        jTextField_gard_product_count_deliviry.setToolTipText("");
        jTextField_gard_product_count_deliviry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_gard_product_count_deliviryActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("المبلغ المحصل دلفرى");

        jTextField_gard_total_price_deliviry.setBackground(new java.awt.Color(255, 255, 255));
        jTextField_gard_total_price_deliviry.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jTextField_gard_total_price_deliviry.setForeground(new java.awt.Color(0, 0, 0));
        jTextField_gard_total_price_deliviry.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField_gard_total_price_deliviry.setText("0");
        jTextField_gard_total_price_deliviry.setToolTipText("");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel6)
                        .addComponent(jTextField_gard_product_count_deliviry, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                        .addComponent(jTextField_gard_total_price_deliviry))
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(4, 4, 4)
                .addComponent(jTextField_gard_product_count_deliviry, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_gard_total_price_deliviry, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(51, 0, 0));
        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(102, 0, 0), null));

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("أجمالى الكمية المباعة :");

        jTextField_gard_product_count.setBackground(new java.awt.Color(255, 255, 255));
        jTextField_gard_product_count.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jTextField_gard_product_count.setForeground(new java.awt.Color(0, 0, 0));
        jTextField_gard_product_count.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField_gard_product_count.setText("0");
        jTextField_gard_product_count.setToolTipText("");
        jTextField_gard_product_count.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_gard_product_countActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("أجمالي المبلغ المحصل :");

        jTextField_gard_total_price.setBackground(new java.awt.Color(255, 255, 255));
        jTextField_gard_total_price.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jTextField_gard_total_price.setForeground(new java.awt.Color(0, 0, 0));
        jTextField_gard_total_price.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField_gard_total_price.setText("0");
        jTextField_gard_total_price.setToolTipText("");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField_gard_product_count)
                    .addComponent(jTextField_gard_total_price, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGap(0, 302, Short.MAX_VALUE)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_gard_product_count, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_gard_total_price, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(51, 0, 0));
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(102, 0, 0), null));

        jComboBox_section_edit.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox_section_edit.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jComboBox_section_edit.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox_section_edit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "أختر قسم ......", "فطير حادق", "فطير حلو", "كريب", "ويتش الفطير", "المكرونات", "البيتزا", "الأضافات مقبلات مشروبات" }));
        jComboBox_section_edit.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_section_editItemStateChanged(evt);
            }
        });
        jComboBox_section_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_section_editActionPerformed(evt);
            }
        });

        jComboBox_products.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox_products.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jComboBox_products.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox_products.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_productsItemStateChanged(evt);
            }
        });
        jComboBox_products.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox_productsMouseClicked(evt);
            }
        });
        jComboBox_products.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_productsActionPerformed(evt);
            }
        });

        jTextField_search.setBackground(new java.awt.Color(255, 255, 255));
        jTextField_search.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField_search.setForeground(new java.awt.Color(0, 0, 0));
        jTextField_search.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_searchActionPerformed(evt);
            }
        });
        jTextField_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_searchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField_search, javax.swing.GroupLayout.DEFAULT_SIZE, 705, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jComboBox_products, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jComboBox_section_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_products, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_search, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(jComboBox_section_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel9.setBackground(new java.awt.Color(51, 0, 0));
        jPanel9.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(102, 0, 0), null));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("اسم المنتج");

        jTextField_gard_product_name.setBackground(new java.awt.Color(255, 255, 255));
        jTextField_gard_product_name.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jTextField_gard_product_name.setForeground(new java.awt.Color(0, 0, 0));
        jTextField_gard_product_name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField_gard_product_name.setToolTipText("");
        jTextField_gard_product_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_gard_product_nameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3))
                    .addComponent(jTextField_gard_product_name))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_gard_product_name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 1552, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1061, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 784, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 1576, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 876, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
int total_delv ;
int total_take ;
    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

        sqldatabaseconn conn = new sqldatabaseconn();
        Statement s ;
ResultSet r_Takeaway ;
ResultSet r_Deliviry ;
        try{
    
     s =conn.connect().createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
     r_Takeaway =s.executeQuery("select * from gard_takeaway");
     ///////////////////////////////////////////////////////////////////////////////////////////////
     int rowcount =0;
   
            int databaserowcount = 1000 ; //r.getRow();//get coun of databaserows
            int tabelrowcount= Takeaway_jTable.getModel().getRowCount();//get count of table roes
            
            for(int j=tabelrowcount-1;j>=0;j--){
            DefaultTableModel dm =(DefaultTableModel)Takeaway_jTable.getModel();
            dm.removeRow(j);
            }
  
           for(int i=0;i<databaserowcount;i++){
              DefaultTableModel dm=(DefaultTableModel)Takeaway_jTable.getModel();
              dm.addRow(new Object[0]);
            } 
           total_take = 0 ;
           while(r_Takeaway.next())
            {
                Takeaway_jTable.setValueAt(r_Takeaway.getString("gard_product_name"), rowcount,4);
               Takeaway_jTable.setValueAt(r_Takeaway.getString("gard_product_count"), rowcount,3);
               Takeaway_jTable.setValueAt(r_Takeaway.getString("gard_product_total_price"), rowcount,2);
                Takeaway_jTable.setValueAt(r_Takeaway.getString("gard_order_num"), rowcount,1); 
                 Takeaway_jTable.setValueAt(r_Takeaway.getString("gard_time_and_date"), rowcount,0); 
                
                
                
//                String get_totals = r_Takeaway.getString("gard_time_and_date");
//                int get_total = Integer.parseInt(get_totals);
//                total_take = total_take + get_total ;
                rowcount ++;          
            }
           String final_total = Integer.toString(total_take);
           jTextField_gard_product_name.setText(final_total);
           
           
           
                     ///////////////////////////////////////////////////////////////////////////////////////////////
                     r_Deliviry =s.executeQuery("select * from gard_deliviry");
                     int rowcount_delv =0;
            int databaserowcount_delv = 1000 ; //r.getRow();//get coun of databaserows
            int tabelrowcount_delv= Deliviry_jTable.getModel().getRowCount();//get count of table roes           
            for(int j=tabelrowcount_delv-1;j>=0;j--){
            DefaultTableModel dm =(DefaultTableModel)Deliviry_jTable.getModel();
            dm.removeRow(j);
            }  
           for(int i=0;i<databaserowcount_delv;i++){
              DefaultTableModel dm=(DefaultTableModel)Deliviry_jTable.getModel();
              dm.addRow(new Object[0]);
            } 
           total_delv = 0 ;           
           while(r_Deliviry.next())
            {    
                Deliviry_jTable.setValueAt(r_Deliviry.getString("gard_product_name"), rowcount_delv,4);
               Deliviry_jTable.setValueAt(r_Deliviry.getString("gard_product_count"), rowcount_delv,3);
               Deliviry_jTable.setValueAt(r_Deliviry.getString("gard_product_total_price"), rowcount_delv,2);
                Deliviry_jTable.setValueAt(r_Deliviry.getString("gard_order_num"), rowcount_delv,1); 
                 Deliviry_jTable.setValueAt(r_Deliviry.getString("gard_time_and_date"), rowcount_delv,0);   
//                String get_totals = r_Deliviry.getString("order_total");
//                int get_total_delv = Integer.parseInt(get_totals);
//                total_delv = total_delv + get_total_delv ;
                rowcount_delv ++;          
            }
           String final_total_delv = Integer.toString(total_delv);
           jTextField_gard_product_count.setText(final_total_delv);

           
}
catch(Exception e){System.out.println(e);}
        
         int total_all = total_take + total_delv ;  
         String final_total_all = Integer.toString(total_all);
           jTextField_gard_total_price.setText(final_total_all);

        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void jTextField_gard_product_countActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_gard_product_countActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_gard_product_countActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
       // new Takeaway_jframe().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_searchActionPerformed

    private void jTextField_searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_searchKeyReleased
        sqldatabaseconn conn = new sqldatabaseconn();
        Statement s ;
        ResultSet r_Takeaway ;
        ResultSet r_Deliviry ;
        try{
            s =conn.connect().createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
            r_Takeaway =s.executeQuery("select * from gard_takeaway where gard_product_name like "+"'"+jTextField_search.getText()+"%'");
            int rowcount =0;
            int databaserowcount = 1000 ; //r.getRow();//get coun of databaserows
            int tabelrowcount= Takeaway_jTable.getModel().getRowCount();//get count of table roes
            for(int j=tabelrowcount-1;j>=0;j--){
                DefaultTableModel dm =(DefaultTableModel)Takeaway_jTable.getModel();
                dm.removeRow(j);
            }
            for(int i=0;i<databaserowcount;i++){
                DefaultTableModel dm=(DefaultTableModel)Takeaway_jTable.getModel();
                dm.addRow(new Object[0]);
            }
            while(r_Takeaway.next())
            {   
                Takeaway_jTable.setValueAt(r_Takeaway.getString("gard_product_name"), rowcount,4);
               Takeaway_jTable.setValueAt(r_Takeaway.getString("gard_product_count"), rowcount,3);
               Takeaway_jTable.setValueAt(r_Takeaway.getString("gard_product_total_price"), rowcount,2);
                Takeaway_jTable.setValueAt(r_Takeaway.getString("gard_order_num"), rowcount,1); 
                 Takeaway_jTable.setValueAt(r_Takeaway.getString("gard_time_and_date"), rowcount,0);    
                rowcount ++;
            }
        }
        catch(Exception e){System.out.println(e);}
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        try{
            s =conn.connect().createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
            r_Deliviry =s.executeQuery("select * from gard_deliviry where gard_product_name like "+"'"+jTextField_search.getText()+"%'");
            int rowcount_delv =0;
            int databaserowcount = 1000 ; //r.getRow();//get coun of databaserows
            int tabelrowcount= Deliviry_jTable.getModel().getRowCount();//get count of table roes
            for(int j=tabelrowcount-1;j>=0;j--){
                DefaultTableModel dm =(DefaultTableModel)Deliviry_jTable.getModel();
                dm.removeRow(j);
            }
            for(int i=0;i<databaserowcount;i++){
                DefaultTableModel dm=(DefaultTableModel)Deliviry_jTable.getModel();
                dm.addRow(new Object[0]);
            }
            while(r_Deliviry.next())
            {   
               Deliviry_jTable.setValueAt(r_Deliviry.getString("gard_product_name"), rowcount_delv,4);
               Deliviry_jTable.setValueAt(r_Deliviry.getString("gard_product_count"), rowcount_delv,3);
               Deliviry_jTable.setValueAt(r_Deliviry.getString("gard_product_total_price"), rowcount_delv,2);
                Deliviry_jTable.setValueAt(r_Deliviry.getString("gard_order_num"), rowcount_delv,1); 
                 Deliviry_jTable.setValueAt(r_Deliviry.getString("gard_time_and_date"), rowcount_delv,0);      
                rowcount_delv ++;
            }
        }
        catch(Exception e){System.out.println(e);}

    }//GEN-LAST:event_jTextField_searchKeyReleased

    private void Takeaway_jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Takeaway_jTableMouseClicked
        int takeaway_gard_count = 0 ;
        int deliviry_gard_count = 0 ;
        int takeaway_gard_price = 0 ;
        int deliviry_gard_price = 0 ;
        
        int colum_floor = 4;
        int row_floor = Takeaway_jTable.getSelectedRow();
        String gard_product_name = Takeaway_jTable.getModel().getValueAt(row_floor, colum_floor).toString();
        
         sqldatabaseconn conn = new sqldatabaseconn();
        Statement s ;
        ResultSet r_Takeaway ;
        ResultSet r_Deliviry ;
        try{
            s =conn.connect().createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
            r_Takeaway =s.executeQuery("select * from gard_takeaway where gard_product_name like "+"'"+gard_product_name+"%'");
            int rowcount =0;
            int databaserowcount = 1000 ; //r.getRow();//get coun of databaserows
            int tabelrowcount= Takeaway_jTable.getModel().getRowCount();//get count of table roes
            for(int j=tabelrowcount-1;j>=0;j--){
                DefaultTableModel dm =(DefaultTableModel)Takeaway_jTable.getModel();
                dm.removeRow(j);
            }
            for(int i=0;i<databaserowcount;i++){
                DefaultTableModel dm=(DefaultTableModel)Takeaway_jTable.getModel();
                dm.addRow(new Object[0]);
            }
            while(r_Takeaway.next())
            {   
                Takeaway_jTable.setValueAt(r_Takeaway.getString("gard_product_name"), rowcount,4);
               Takeaway_jTable.setValueAt(r_Takeaway.getString("gard_product_count"), rowcount,3);
               Takeaway_jTable.setValueAt(r_Takeaway.getString("gard_product_total_price"), rowcount,2);
                Takeaway_jTable.setValueAt(r_Takeaway.getString("gard_order_num"), rowcount,1); 
                 Takeaway_jTable.setValueAt(r_Takeaway.getString("gard_time_and_date"), rowcount,0);    
                rowcount ++;
                
               int count = Integer.parseInt(r_Takeaway.getString("gard_product_count"));
               takeaway_gard_count = takeaway_gard_count + count ;
               
               int price = Integer.parseInt(r_Takeaway.getString("gard_product_total_price"));
               takeaway_gard_price = takeaway_gard_price + price ;
            }
        }
        catch(Exception e){System.out.println(e);}
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        try{
            s =conn.connect().createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
            r_Deliviry =s.executeQuery("select * from gard_deliviry where gard_product_name like "+"'"+gard_product_name+"%'");
            int rowcount_delv =0;
            int databaserowcount = 1000 ; //r.getRow();//get coun of databaserows
            int tabelrowcount= Deliviry_jTable.getModel().getRowCount();//get count of table roes
            for(int j=tabelrowcount-1;j>=0;j--){
                DefaultTableModel dm =(DefaultTableModel)Deliviry_jTable.getModel();
                dm.removeRow(j);
            }
            for(int i=0;i<databaserowcount;i++){
                DefaultTableModel dm=(DefaultTableModel)Deliviry_jTable.getModel();
                dm.addRow(new Object[0]);
            }
            while(r_Deliviry.next())
            {   
               Deliviry_jTable.setValueAt(r_Deliviry.getString("gard_product_name"), rowcount_delv,4);
               Deliviry_jTable.setValueAt(r_Deliviry.getString("gard_product_count"), rowcount_delv,3);
               Deliviry_jTable.setValueAt(r_Deliviry.getString("gard_product_total_price"), rowcount_delv,2);
                Deliviry_jTable.setValueAt(r_Deliviry.getString("gard_order_num"), rowcount_delv,1); 
                 Deliviry_jTable.setValueAt(r_Deliviry.getString("gard_time_and_date"), rowcount_delv,0);      
                rowcount_delv ++;
                
                int count = Integer.parseInt(r_Deliviry.getString("gard_product_count"));
               deliviry_gard_count = deliviry_gard_count + count ;
               
                int price = Integer.parseInt(r_Deliviry.getString("gard_product_total_price"));
               deliviry_gard_price = deliviry_gard_price + price ;
            }
        }
        catch(Exception e){System.out.println(e);}
        
        
        ////////////////// gard proccess 
        
        String count = Integer.toString(takeaway_gard_count+deliviry_gard_count);
        String price = Integer.toString(takeaway_gard_price+deliviry_gard_price);
        
        jTextField_gard_product_name.setText(gard_product_name);
        jTextField_gard_product_count.setText(count);
        jTextField_gard_total_price.setText(price);
        
        
        String count_takeaway = Integer.toString(takeaway_gard_count);
        String count_deliviry = Integer.toString(deliviry_gard_count);
        
        String price_takeaway = Integer.toString(takeaway_gard_price);
        String price_deliviry = Integer.toString(deliviry_gard_price);
        
        jTextField_gard_product_count_takeaway.setText(count_takeaway);
        jTextField_gard_product_count_deliviry.setText(count_deliviry);
        jTextField_gard_total_price_takeaway.setText(price_takeaway);
        jTextField_gard_total_price_deliviry.setText(price_deliviry);
        
        

    }//GEN-LAST:event_Takeaway_jTableMouseClicked

    private void Deliviry_jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Deliviry_jTableMouseClicked
         int takeaway_gard_count = 0 ;
        int deliviry_gard_count = 0 ;
        int takeaway_gard_price = 0 ;
        int deliviry_gard_price = 0 ;
        
        int colum_floor = 4;
        int row_floor = Deliviry_jTable.getSelectedRow();
        String gard_product_name = Deliviry_jTable.getModel().getValueAt(row_floor, colum_floor).toString();
        
         sqldatabaseconn conn = new sqldatabaseconn();
        Statement s ;
        ResultSet r_Takeaway ;
        ResultSet r_Deliviry ;
        try{
            s =conn.connect().createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
            r_Takeaway =s.executeQuery("select * from gard_takeaway where gard_product_name like "+"'"+gard_product_name+"%'");
            int rowcount =0;
            int databaserowcount = 1000 ; //r.getRow();//get coun of databaserows
            int tabelrowcount= Takeaway_jTable.getModel().getRowCount();//get count of table roes
            for(int j=tabelrowcount-1;j>=0;j--){
                DefaultTableModel dm =(DefaultTableModel)Takeaway_jTable.getModel();
                dm.removeRow(j);
            }
            for(int i=0;i<databaserowcount;i++){
                DefaultTableModel dm=(DefaultTableModel)Takeaway_jTable.getModel();
                dm.addRow(new Object[0]);
            }
            while(r_Takeaway.next())
            {   
                Takeaway_jTable.setValueAt(r_Takeaway.getString("gard_product_name"), rowcount,4);
               Takeaway_jTable.setValueAt(r_Takeaway.getString("gard_product_count"), rowcount,3);
               Takeaway_jTable.setValueAt(r_Takeaway.getString("gard_product_total_price"), rowcount,2);
                Takeaway_jTable.setValueAt(r_Takeaway.getString("gard_order_num"), rowcount,1); 
                 Takeaway_jTable.setValueAt(r_Takeaway.getString("gard_time_and_date"), rowcount,0);    
                rowcount ++;
                
                 int count = Integer.parseInt(r_Takeaway.getString("gard_product_count"));
               takeaway_gard_count = takeaway_gard_count + count ;
               
               int price = Integer.parseInt(r_Takeaway.getString("gard_product_total_price"));
               takeaway_gard_price = takeaway_gard_price + price ;
            }
        }
        catch(Exception e){System.out.println(e);}
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        try{
            s =conn.connect().createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
            r_Deliviry =s.executeQuery("select * from gard_deliviry where gard_product_name like "+"'"+gard_product_name+"%'");
            int rowcount_delv =0;
            int databaserowcount = 1000 ; //r.getRow();//get coun of databaserows
            int tabelrowcount= Deliviry_jTable.getModel().getRowCount();//get count of table roes
            for(int j=tabelrowcount-1;j>=0;j--){
                DefaultTableModel dm =(DefaultTableModel)Deliviry_jTable.getModel();
                dm.removeRow(j);
            }
            for(int i=0;i<databaserowcount;i++){
                DefaultTableModel dm=(DefaultTableModel)Deliviry_jTable.getModel();
                dm.addRow(new Object[0]);
            }
            while(r_Deliviry.next())
            {   
               Deliviry_jTable.setValueAt(r_Deliviry.getString("gard_product_name"), rowcount_delv,4);
               Deliviry_jTable.setValueAt(r_Deliviry.getString("gard_product_count"), rowcount_delv,3);
               Deliviry_jTable.setValueAt(r_Deliviry.getString("gard_product_total_price"), rowcount_delv,2);
                Deliviry_jTable.setValueAt(r_Deliviry.getString("gard_order_num"), rowcount_delv,1); 
                 Deliviry_jTable.setValueAt(r_Deliviry.getString("gard_time_and_date"), rowcount_delv,0);      
                rowcount_delv ++;
                
                 int count = Integer.parseInt(r_Deliviry.getString("gard_product_count"));
               deliviry_gard_count = deliviry_gard_count + count ;
               
                int price = Integer.parseInt(r_Deliviry.getString("gard_product_total_price"));
               deliviry_gard_price = deliviry_gard_price + price ;
            }
        }
        catch(Exception e){System.out.println(e);}
        
         ////////////////// gard proccess 
        
        String count = Integer.toString(takeaway_gard_count+deliviry_gard_count);
        String price = Integer.toString(takeaway_gard_price+deliviry_gard_price);
        
        jTextField_gard_product_name.setText(gard_product_name);
        jTextField_gard_product_count.setText(count);
        jTextField_gard_total_price.setText(price);
        
        
          String count_takeaway = Integer.toString(takeaway_gard_count);
        String count_deliviry = Integer.toString(deliviry_gard_count);
        
        String price_takeaway = Integer.toString(takeaway_gard_price);
        String price_deliviry = Integer.toString(deliviry_gard_price);
        
        jTextField_gard_product_count_takeaway.setText(count_takeaway);
        jTextField_gard_product_count_deliviry.setText(count_deliviry);
        jTextField_gard_total_price_takeaway.setText(price_takeaway);
        jTextField_gard_total_price_deliviry.setText(price_deliviry);
    }//GEN-LAST:event_Deliviry_jTableMouseClicked

    private void jTextField_gard_product_count_deliviryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_gard_product_count_deliviryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_gard_product_count_deliviryActionPerformed

    private void jTextField_gard_product_count_takeawayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_gard_product_count_takeawayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_gard_product_count_takeawayActionPerformed

    private void jComboBox_productsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_productsActionPerformed
        
          int takeaway_gard_count = 0 ;
        int deliviry_gard_count = 0 ;
        int takeaway_gard_price = 0 ;
        int deliviry_gard_price = 0 ;
        
        int colum_floor = 4;
        int row_floor = Takeaway_jTable.getSelectedRow();
        
        if(jComboBox_products.getItemCount() != 0 ){
        
        String gard_product_name = jComboBox_products.getSelectedItem().toString();
        
         sqldatabaseconn conn = new sqldatabaseconn();
        Statement s ;
        ResultSet r_Takeaway ;
        ResultSet r_Deliviry ;
        try{
            s =conn.connect().createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
            r_Takeaway =s.executeQuery("select * from gard_takeaway where gard_product_name like "+"'"+gard_product_name+"%'");
            int rowcount =0;
            int databaserowcount = 1000 ; //r.getRow();//get coun of databaserows
            int tabelrowcount= Takeaway_jTable.getModel().getRowCount();//get count of table roes
            for(int j=tabelrowcount-1;j>=0;j--){
                DefaultTableModel dm =(DefaultTableModel)Takeaway_jTable.getModel();
                dm.removeRow(j);
            }
            for(int i=0;i<databaserowcount;i++){
                DefaultTableModel dm=(DefaultTableModel)Takeaway_jTable.getModel();
                dm.addRow(new Object[0]);
            }
            while(r_Takeaway.next())
            {   
                Takeaway_jTable.setValueAt(r_Takeaway.getString("gard_product_name"), rowcount,4);
               Takeaway_jTable.setValueAt(r_Takeaway.getString("gard_product_count"), rowcount,3);
               Takeaway_jTable.setValueAt(r_Takeaway.getString("gard_product_total_price"), rowcount,2);
                Takeaway_jTable.setValueAt(r_Takeaway.getString("gard_order_num"), rowcount,1); 
                 Takeaway_jTable.setValueAt(r_Takeaway.getString("gard_time_and_date"), rowcount,0);    
                rowcount ++;
                
               int count = Integer.parseInt(r_Takeaway.getString("gard_product_count"));
               takeaway_gard_count = takeaway_gard_count + count ;
               
               int price = Integer.parseInt(r_Takeaway.getString("gard_product_total_price"));
               takeaway_gard_price = takeaway_gard_price + price ;
            }
        }
        catch(Exception e){System.out.println(e);}
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        try{
            s =conn.connect().createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
            r_Deliviry =s.executeQuery("select * from gard_deliviry where gard_product_name like "+"'"+gard_product_name+"%'");
            int rowcount_delv =0;
            int databaserowcount = 1000 ; //r.getRow();//get coun of databaserows
            int tabelrowcount= Deliviry_jTable.getModel().getRowCount();//get count of table roes
            for(int j=tabelrowcount-1;j>=0;j--){
                DefaultTableModel dm =(DefaultTableModel)Deliviry_jTable.getModel();
                dm.removeRow(j);
            }
            for(int i=0;i<databaserowcount;i++){
                DefaultTableModel dm=(DefaultTableModel)Deliviry_jTable.getModel();
                dm.addRow(new Object[0]);
            }
            while(r_Deliviry.next())
            {   
               Deliviry_jTable.setValueAt(r_Deliviry.getString("gard_product_name"), rowcount_delv,4);
               Deliviry_jTable.setValueAt(r_Deliviry.getString("gard_product_count"), rowcount_delv,3);
               Deliviry_jTable.setValueAt(r_Deliviry.getString("gard_product_total_price"), rowcount_delv,2);
                Deliviry_jTable.setValueAt(r_Deliviry.getString("gard_order_num"), rowcount_delv,1); 
                 Deliviry_jTable.setValueAt(r_Deliviry.getString("gard_time_and_date"), rowcount_delv,0);      
                rowcount_delv ++;
                
                int count = Integer.parseInt(r_Deliviry.getString("gard_product_count"));
               deliviry_gard_count = deliviry_gard_count + count ;
               
                int price = Integer.parseInt(r_Deliviry.getString("gard_product_total_price"));
               deliviry_gard_price = deliviry_gard_price + price ;
            }
        }
        catch(Exception e){System.out.println(e);}
        
        
        ////////////////// gard proccess 
        
        String count = Integer.toString(takeaway_gard_count+deliviry_gard_count);
        String price = Integer.toString(takeaway_gard_price+deliviry_gard_price);
        
        jTextField_gard_product_name.setText(gard_product_name);
        jTextField_gard_product_count.setText(count);
        jTextField_gard_total_price.setText(price);
        
        
        String count_takeaway = Integer.toString(takeaway_gard_count);
        String count_deliviry = Integer.toString(deliviry_gard_count);
        
        String price_takeaway = Integer.toString(takeaway_gard_price);
        String price_deliviry = Integer.toString(deliviry_gard_price);
        
        jTextField_gard_product_count_takeaway.setText(count_takeaway);
        jTextField_gard_product_count_deliviry.setText(count_deliviry);
        jTextField_gard_total_price_takeaway.setText(price_takeaway);
        jTextField_gard_total_price_deliviry.setText(price_deliviry);
               
        }
        
    }//GEN-LAST:event_jComboBox_productsActionPerformed

    private void jComboBox_section_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_section_editActionPerformed
       
         
        String tabel_name = "";
        String section_name=   jComboBox_section_edit.getSelectedItem().toString();
        jComboBox_products.removeAllItems();
        jComboBox_products.repaint();
        
        if(section_name.equals("فطير حادق") ){tabel_name="shawrma";}
        if(section_name.equals("فطير حلو")){tabel_name="chikn";}
        if(section_name.equals("المكرونات")){tabel_name="mokblaat";}
        if(section_name.equals("كريب")){tabel_name="garby";}
        if(section_name.equals("ويتش الفطير")){tabel_name="wagbat";}
        if(section_name.equals("البيتزا")){tabel_name="drinks";}
        if(section_name.equals("الأضافات مقبلات مشروبات")){tabel_name="adafaat";}
        
          sqldatabaseconn conn = new sqldatabaseconn();
        Statement s ;
        ResultSet r ;
           try{
            s =conn.connect().createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
            r =s.executeQuery("select * from "+tabel_name);          
            while(r.next())
            {   
                 jComboBox_products.addItem(r.getString("product_name")+" - "+r.getString("product_description"));
            }
        }
        catch(Exception e){System.out.println(e);}
    }//GEN-LAST:event_jComboBox_section_editActionPerformed

    private void jComboBox_section_editItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_section_editItemStateChanged
       

    }//GEN-LAST:event_jComboBox_section_editItemStateChanged

    private void jComboBox_productsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox_productsMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_productsMouseClicked

    private void jComboBox_productsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_productsItemStateChanged
     
        
    
    }//GEN-LAST:event_jComboBox_productsItemStateChanged

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        new Days_gard_JFrame().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField_gard_product_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_gard_product_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_gard_product_nameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(One_day_gard_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(One_day_gard_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(One_day_gard_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(One_day_gard_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new One_day_gard_JFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Deliviry_jTable;
    private javax.swing.JTable Takeaway_jTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox_products;
    private javax.swing.JComboBox<String> jComboBox_section_edit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField_gard_product_count;
    private javax.swing.JTextField jTextField_gard_product_count_deliviry;
    private javax.swing.JTextField jTextField_gard_product_count_takeaway;
    private javax.swing.JTextField jTextField_gard_product_name;
    private javax.swing.JTextField jTextField_gard_total_price;
    private javax.swing.JTextField jTextField_gard_total_price_deliviry;
    private javax.swing.JTextField jTextField_gard_total_price_takeaway;
    private javax.swing.JTextField jTextField_search;
    // End of variables declaration//GEN-END:variables
}
